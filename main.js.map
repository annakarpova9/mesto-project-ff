{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const apiConfig = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-12\",\n  headers: {\n    authorization: \"b8df9e7d-b568-40ba-8f5a-580c29dc72c3\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nfunction handleResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка в then: ${res.status}`);\n}\n\nexport function apiRequest(apiRequestConfig) {\n  return fetch(`${apiConfig.baseUrl}/${apiRequestConfig.url}`, {\n    method: `${apiRequestConfig.method}`,\n    headers: apiConfig.headers,\n    body: JSON.stringify(apiRequestConfig.body),\n  }).then(handleResponse);\n}\n\nexport function catchError(err) {\n  console.log(`Ошибка в catch: ${err}`);\n}\n","import { apiRequest, catchError } from \"../components/api.js\";\n\nconst cardTemplate = document.querySelector(\"#card-template\").content;\n\n// Функция создания карточки\n\nexport function createCard(cardConfig, ownerId) {\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n\n  const img = cardElement.querySelector(\".card__image\");\n  img.src = cardConfig.card.link;\n  img.alt = cardConfig.card.name;\n\n  img.addEventListener(\"click\", () =>\n    cardConfig.openModalFullImage(img, title)\n  );\n\n  const title = cardElement.querySelector(\".card__title\");\n  title.textContent = cardConfig.card.name;\n\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  if (cardConfig.card.owner._id !== ownerId) {\n    deleteButton.remove();\n  } else {\n    cardConfig.clickButtonDeleteCard(deleteButton, cardConfig.card, cardElement);\n  }\n\n  const likeBtn = cardElement.querySelector(\".card__like-button\");\n  const likeAmount = cardElement.querySelector(\".card__like-amount\");\n\n  likeAmount.textContent =\n    cardConfig.card.likes.length === 0 ? \"0\" : cardConfig.card.likes.length;\n\n  if (\n    cardConfig.card.likes.some((like) => {\n      return like._id === ownerId;\n    })\n  ) {\n    likeBtn.classList.add(\"card__like-button_is-active\");\n  }\n\n  likeBtn.addEventListener(\"click\", () =>\n    cardConfig.likeCard(cardConfig.card, likeBtn, likeAmount)\n  );\n\n  return cardElement;\n}\n\n// Функция лайка\n\nexport function likeCard(card, likeBtn, likeAmount) {\n  if (likeBtn.classList.contains(\"card__like-button_is-active\")) {\n    apiRequest({\n      url: `cards/likes/${card._id}`,\n      method: \"DELETE\",\n    })\n      .then((res) => {\n        likeBtn.classList.remove(\"card__like-button_is-active\");\n        likeAmount.textContent =\n          res.likes.length === 0 ? \"0\" : res.likes.length;\n      })\n      .catch(catchError);\n  } else {\n    apiRequest({\n      url: `cards/likes/${card._id}`,\n      method: \"PUT\",\n    })\n      .then((res) => {\n        likeBtn.classList.add(\"card__like-button_is-active\");\n        likeAmount.textContent =\n          res.likes.length === 0 ? \"0\" : res.likes.length;\n      })\n      .catch(catchError);\n  }\n}\n","// Функция открытия модального окна\n\nexport function openModal(popup) {\n  popup.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closePopupEsc);\n}\n\n//Функция закрытия окна: при нажатии на Esc, на крестик и на оверлей\n\nexport function closeModal(popup) {\n  popup.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closePopupEsc);\n}\n\nfunction closePopupEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closeModal(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\nexport function closePopupOverlay(evt) {\n  if (evt.target.classList.contains(\"popup\")) {\n    closeModal(evt.target);\n  }\n}\n\nexport function closePopupCross(evt) {\n  if (evt.target.classList.contains(\"popup__close\")) {\n    closeModal(evt.target.closest(\".popup\"));\n  }\n}\n","export const validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_inactive\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__input-error_active\",\n};\n\n// Функции для показа и скрытия ошибок\n\nfunction showInputError(\n  formElement,\n  inputElement,\n  errorMessage,\n  validationConfig\n) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n\n  inputElement.classList.add(validationConfig.inputErrorClass);\n\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n}\n\nfunction hideInputError(formElement, inputElement) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  inputElement.setCustomValidity(\"\");\n\n  errorElement.classList.remove(validationConfig.errorClass);\n  errorElement.textContent = \" \";\n}\n\n// Проверка валидности формы для показа/скрытия ошибки и выбора вида ошибки\n\nfunction checkInputValidity(formElement, inputElement, validationConfig) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      validationConfig\n    );\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n}\n\n// Функции слушателя всех инпутов и всех форм\n\nfunction setEventListeners(formElement, validationConfig) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationConfig.submitButtonSelector\n  );\n\n  toggleButtonState(inputList, buttonElement, validationConfig);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", () => {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, buttonElement, validationConfig);\n    });\n  });\n}\n\nexport function enableValidation(validationConfig) {\n  const formList = Array.from(\n    document.querySelectorAll(validationConfig.formSelector)\n  );\n\n  formList.forEach((formElement) => {\n    formElement.addEventListener(\"submit\", (evt) => evt.preventDefault());\n    setEventListeners(formElement, validationConfig);\n  });\n}\n\n// Фунцкции проверки одновременной валидности инпутов и состояния кнопки\n\nfunction hasInvalidInput(inputList) {\n  return inputList.some((inputElement) => !inputElement.validity.valid);\n}\n\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n  }\n}\n\n// Функция очистки ошибок\n\nexport function clearValidation(formElement, validationConfig) {\n  const inputList = Array.from(\n    formElement.querySelectorAll(validationConfig.inputSelector)\n  );\n  const buttonElement = formElement.querySelector(\n    validationConfig.submitButtonSelector\n  );\n\n  inputList.forEach((inputElement) =>\n    hideInputError(formElement, inputElement, validationConfig)\n  );\n  toggleButtonState(inputList, buttonElement, validationConfig);\n}\n","import \"../pages/index.css\";\nimport { createCard, likeCard } from \"../components/card.js\";\nimport {\n  openModal,\n  closeModal,\n  closePopupOverlay,\n  closePopupCross,\n} from \"../components/modal.js\";\nimport {\n  validationConfig,\n  enableValidation,\n  clearValidation,\n} from \"../components/validation.js\";\nimport { apiRequest, catchError } from \"../components/api.js\";\n\nconst containerCards = document.querySelector(\".places__list\");\n\nconst popups = document.querySelectorAll(\".popup\");\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\nconst popupTypeAvatar = document.querySelector(\".popup_type_avatar\");\nconst popupTypeDeleteCard = document.querySelector(\".popup_type_delete-card\");\n\nconst buttonOpenPopupProfile = document.querySelector(\".profile__edit-button\");\nconst buttonOpenPopupAddCard = document.querySelector(\".profile__add-button\");\n\nconst formEditProfile = document.forms[\"edit-profile\"];\nconst inputNameProfile = formEditProfile.elements.name;\nconst inputDescriptionProfile = formEditProfile.elements.description;\n\nconst formAddNewCard = document.forms[\"new-place\"];\nconst inputNameCard = formAddNewCard.elements[\"place-name\"];\nconst inputLinkCard = formAddNewCard.elements.link;\n\nconst formDeleteCard = document.forms[\"delete-card\"];\n\nconst formNewAvatar = document.forms.avatar;\nconst inputLinkAvatar = formNewAvatar.elements[\"avatar-link\"];\n\nconst profileInfo = document.querySelector(\".profile__info\");\nconst profileImage = document.querySelector(\".profile__image\");\nconst profileTitle = profileInfo.querySelector(\".profile__title\");\nconst profileDescription = profileInfo.querySelector(\".profile__description\");\n\nconst buttonOpenFullImage = popupTypeImage.querySelector(\".popup__image\");\nconst captionFullImage = popupTypeImage.querySelector(\".popup__caption\");\n\nlet idClickedCard = \"0\";\n\n//\n\nenableValidation(validationConfig);\n\n// Получение от сервера карточек и пользователя\n\nPromise.all([\n  apiRequest({\n    url: \"cards\",\n    method: \"GET\",\n  }),\n\n  apiRequest({\n    url: \"users/me\",\n    method: \"GET\",\n  }),\n])\n  .then(([infoCards, infoUser]) => {\n    getDataCards(infoCards);\n    getDataProfile(infoUser);\n  })\n  .catch(catchError);\n\n// Вывод информации профиля\n\nfunction getDataProfile(res) {\n  profileInfo.dataset.userId = res._id;\n  profileImage.style.backgroundImage = `url(${res.avatar})`;\n  profileTitle.textContent = res.name;\n  profileDescription.textContent = res.about;\n}\n\n// Вывод карточек на страницу\n\nfunction getDataCards(res) {\n  res.forEach((card) => {\n    containerCards.append(\n      createCard(\n        {\n          card: card,\n          likeCard,\n          openModalFullImage,\n          clickButtonDeleteCard,\n        },\n        profileInfo.dataset.userId\n      )\n    );\n  });\n}\n\n// Функция для открытия модального окна с изображением\n\nfunction openModalFullImage(img, title) {\n  buttonOpenFullImage.src = img.src;\n  buttonOpenFullImage.alt = img.alt;\n  captionFullImage.textContent = title.textContent;\n  openModal(popupTypeImage);\n}\n\n// Добавление класса для плавной анимации всем модальным окнам\n\npopups.forEach((item) => item.classList.add(\"popup_is-animated\"));\n\n// Закрытие модальных окон по нажатию на крестик и оверлей\n\npopups.forEach((item) => item.addEventListener(\"mousedown\", closePopupOverlay));\npopups.forEach((item) => item.addEventListener(\"click\", closePopupCross));\n\n// Обработка клика по кнопкам редактирования профиля, добавления новой карточки и аватара\n\nbuttonOpenPopupProfile.addEventListener(\"click\", () => {\n  openModal(popupTypeEdit);\n  fillFormEditProfile();\n  clearValidation(formEditProfile, validationConfig);\n});\n\nbuttonOpenPopupAddCard.addEventListener(\"click\", () => {\n  formAddNewCard.reset();\n  openModal(popupTypeNewCard);\n  clearValidation(formAddNewCard, validationConfig);\n});\n\nprofileImage.addEventListener(\"click\", () => {\n  formNewAvatar.reset();\n  openModal(popupTypeAvatar);\n  clearValidation(popupTypeAvatar, validationConfig);\n});\n\n// Обработка события sumbit для модального окна редактирования профиля\n\nfunction handleFormEditSubmit(evt) {\n  evt.preventDefault();\n  renderLoading(evt);\n\n  apiRequest({\n    url: \"users/me\",\n    method: \"PATCH\",\n    body: {\n      name: inputNameProfile.value,\n      about: inputDescriptionProfile.value,\n    },\n  })\n    .then((res) => getDataProfile(res))\n    .catch(catchError)\n    .finally(() => renderLoading(evt, \"Сохранение\"));\n\n  closeModal(popupTypeEdit);\n}\n\nformEditProfile.addEventListener(\"submit\", handleFormEditSubmit);\n\nfunction fillFormEditProfile() {\n  inputNameProfile.value = profileTitle.textContent;\n  inputDescriptionProfile.value = profileDescription.textContent;\n}\n\n// Добавление новой карточки\n\nfunction handleFormNewCardSubmit(evt) {\n  evt.preventDefault();\n  renderLoading(evt);\n\n  apiRequest({\n    url: \"cards\",\n    method: \"POST\",\n    body: {\n      name: inputNameCard.value,\n      link: inputLinkCard.value,\n    },\n  })\n    .then((card) =>\n      containerCards.append(\n        createCard(\n          {\n            card: card,\n            likeCard,\n            openModalFullImage,\n            clickButtonDeleteCard,\n          },\n          profileInfo.dataset.userId\n        )\n      )\n    )\n    .catch(catchError)\n    .finally(() => renderLoading(evt, \"Сохранение\"));\n\n  formAddNewCard.reset();\n  closeModal(popupTypeNewCard);\n}\n\nformAddNewCard.addEventListener(\"submit\", handleFormNewCardSubmit);\n\n// Обновление аватара на сервере\n\nfunction handleAvatarSubmit(evt) {\n  evt.preventDefault();\n  renderLoading(evt);\n\n  apiRequest({\n    url: \"users/me/avatar\",\n    method: \"PATCH\",\n    body: {\n      avatar: inputLinkAvatar.value,\n    },\n  })\n    .then((res) => getDataProfile(res))\n    .catch(catchError)\n    .finally(() => renderLoading(evt, \"Сохранение\"));\n\n  closeModal(popupTypeAvatar);\n}\n\nformNewAvatar.addEventListener(\"submit\", handleAvatarSubmit);\n\n// Функция загрузки при ожидании ответа от сервера\n\nfunction renderLoading(evt, buttonText = \"Сохранить\") {\n  const button = evt.submitter;\n  button.textContent = buttonText;\n}\n\n// Обработчика нажатия на кнопку удаления\n\nfunction clickButtonDeleteCard(deleteButton, card, cardElement) {\n  deleteButton.addEventListener(\"click\", () => {\n    idClickedCard = card._id;\n    cardElement.id = idClickedCard;\n    openModal(popupTypeDeleteCard);\n  });\n}\n\n// Удаление карточки при согласии\n\nfunction handleDeleteCardSubmit(evt, buttonText) {\n  evt.preventDefault();\n\n  renderLoading(evt, \"Удаление...\");\n\n  apiRequest({\n    url: `cards/${idClickedCard}`,\n    method: \"DELETE\",\n  })\n    .then((card) => {\n      card = document.getElementById(idClickedCard);\n      card.remove;\n    })\n    .catch(catchError)\n    .finally(() => renderLoading(evt, \"Да\"));\n  closeModal(popupTypeDeleteCard);\n}\n\nformDeleteCard.addEventListener(\"submit\", handleDeleteCardSubmit);\n"],"names":["apiConfig","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","apiRequest","apiRequestConfig","fetch","url","method","body","JSON","stringify","then","catchError","err","console","log","cardTemplate","document","querySelector","content","createCard","cardConfig","ownerId","cardElement","cloneNode","img","src","card","link","alt","name","addEventListener","openModalFullImage","title","textContent","deleteButton","owner","_id","remove","clickButtonDeleteCard","likeBtn","likeAmount","likes","length","some","like","classList","add","likeCard","contains","catch","openModal","popup","closePopupEsc","closeModal","removeEventListener","evt","key","closePopupOverlay","target","closePopupCross","closest","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","id","setCustomValidity","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","containerCards","popups","popupTypeEdit","popupTypeNewCard","popupTypeImage","popupTypeAvatar","popupTypeDeleteCard","buttonOpenPopupProfile","buttonOpenPopupAddCard","formEditProfile","forms","inputNameProfile","elements","inputDescriptionProfile","description","formAddNewCard","inputNameCard","inputLinkCard","formDeleteCard","formNewAvatar","avatar","inputLinkAvatar","profileInfo","profileImage","profileTitle","profileDescription","buttonOpenFullImage","captionFullImage","idClickedCard","getDataProfile","dataset","userId","style","backgroundImage","about","renderLoading","buttonText","arguments","undefined","submitter","preventDefault","patternMismatch","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","infoCards","infoUser","append","item","value","reset","finally","getElementById"],"sourceRoot":""}